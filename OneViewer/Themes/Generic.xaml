<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:OneViewer.Controls"
                    xmlns:converters="clr-namespace:OneViewer.Converters" >

    <SolidColorBrush x:Key="ControlBrush" Color="{x:Static SystemColors.ControlColor}" />
    <SolidColorBrush x:Key="ControlTextBrush" Color="{x:Static SystemColors.ControlTextColor}" />
    <SolidColorBrush x:Key="GrayTextBrush" Color="{x:Static SystemColors.GrayTextColor}" />
    <SolidColorBrush x:Key="HighlightColorBrush" Color="{x:Static SystemColors.HighlightColor}" />
    
    <SolidColorBrush x:Key="MouseOverBackground" Color="#EBF4FD" />
    <SolidColorBrush x:Key="MouseOverBorder" Color="#B8D6FB" />

    <SolidColorBrush x:Key="SelectedBackground" Color="#C1DBFC" />
    <SolidColorBrush x:Key="SelectedBorder" Color="#26A0DA" />

    <SolidColorBrush x:Key="HighlightBackground" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="InactiveHighlightBackground" Color="#F6F6F6" />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="NavbarButton" BasedOn="{StaticResource BorderlessButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="36" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#004d88"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DropdownMenu" TargetType="{x:Type MenuItem}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Header">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <StackPanel Orientation="Horizontal" Height="38">
                        <ContentPresenter VerticalAlignment="Center"/>
                        <Path Margin="12,0" VerticalAlignment="Center" Width="6" Fill="#FF527DB5" Stretch="Uniform" HorizontalAlignment="Right" 
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Rectangle Name="Rectangle" Margin="0,0,0,0" Fill="#00FFFFFF" />
            <Path x:Name="ExpandPath" HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Data="M0,0 L0,6 L6,0 L0,0" Fill="Transparent" Stroke="#FF989898">
                <Path.RenderTransform>
                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                </Path.RenderTransform>
            </Path>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="135" To="180" Duration="0:0:0.25"
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="180" To="135" Duration="0:0:0.25"
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AnimatedExpanderTemplate" TargetType="{x:Type Expander}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="ContentRow" >
                    <RowDefinition.Resources>
                        <converters:MultiplyConverter x:Key="multiplyConverter"/>
                    </RowDefinition.Resources>
                    <RowDefinition.Tag>
                        <sys:Double>0.0</sys:Double>
                    </RowDefinition.Tag>
                    <RowDefinition.Height>
                        <MultiBinding Converter="{StaticResource multiplyConverter}">
                            <Binding Path="DesiredSize.Height" ElementName="Content" />
                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </RowDefinition.Height>
                </RowDefinition>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter Grid.Column="1" Margin="4,1,1,1" RecognizesAccessKey="True" ContentSource="Header" />
            </Grid>

            <Border x:Name="Content" Grid.Row="1">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="False" />
            </Border>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="0" To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="1" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="1" Margin="4,1,1,1" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>

                        <Border x:Name="Content" Visibility="Collapsed" Grid.Row="1">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="False" />
                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" CornerRadius="4">
                        <Grid>
                            <ContentPresenter x:Name="PART_ContentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
									          Margin="2"/>
                            <Border x:Name="SelectionIndicator"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Width="3"
                                    Height="16"
							        Margin="2.5,0,0,0"
                                    CornerRadius="2"
                                    UseLayoutRounding="False"
							        Background="Transparent" />
                        </Grid>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Margin" Value="0,-2,0,0" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource MouseOverBackground}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectionIndicator" Property="Background" Value="{StaticResource HighlightColorBrush}" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
    </Style>

    <Style x:Key="StaticListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
    </Style>

    <Style x:Key="PageHolderFrameStyle" TargetType="{x:Type Frame}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_FrameCP" DataContext="{TemplateBinding DataContext}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>