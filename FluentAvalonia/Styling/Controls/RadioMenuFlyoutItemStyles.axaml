<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:media="clr-namespace:FluentAvalonia.UI.Media;assembly=FluentAvalonia"
             xmlns:conv="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls">

	<Style Selector="ui|RadioMenuFlyoutItem">
		<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutItemBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutItemBorderThickness}"/>
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}" />
		<Setter Property="Padding" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<!--<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />-->
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="LayoutRoot"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Margin="{StaticResource MenuFlyoutItemMargin}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<Grid ColumnDefinitions="Auto,*,Auto"
						  Name="LayoutRootGrid">

						<!-- 
						Offset by 6 on left to fix icon placement 
						Also FluentIcons doesn't have a comparable icon to the WinUI one from Segoe MDL2 Assets
						so we just use a path icon that draws a small circle and it basically looks the same
						-->
						<ui:PathIcon Data="M0,2a2,2 0 1,0 4,0a2,2 0 1,0 -4,0"
									   Margin="6 0 16 0"
									   Name="CheckGlyph" UseLayoutRounding="False"
									 VerticalAlignment="Center"
									 />

						<Viewbox Name="IconRoot"
								 Grid.Column="1"
								 HorizontalAlignment="Left"
								 VerticalAlignment="Center"
								 Width="16" Height="16">
							<ContentPresenter Name="IconContent"
											  Content="{TemplateBinding Icon}"/>
						</Viewbox>
						<TextBlock Name="TextBlock"
								   Grid.Column="1"
								   Text="{TemplateBinding Text}"
								   TextTrimming="{DynamicResource MenuFlyoutItemTextTrimming}"
								   Foreground="{TemplateBinding Foreground}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Stretch" />

						<!-- 
						TODO:
						MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"						
						Also changed margin top from 4 to 0 b/c text wasn't aligned w/ main text
						-->
						<TextBlock Name="KeyboardAcceleratorTextBlock"
									Grid.Column="2"
									Classes="CaptionTextBlockStyle"
									Text="{TemplateBinding InputGesture, Converter={StaticResource KeyConv}}"
									Margin="24,0,0,0"
									HorizontalAlignment="Right"
								   VerticalAlignment="Center"/>
					</Grid>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Narrow padding is only applied when flyout was invoked with pen, mouse or keyboard. -->
	<!-- Default padding is applied for all other cases including touch. -->
	<!-- For our case, that's basically all the time, plus the smaller items look slightly better -->
	<Style Selector="ui|RadioMenuFlyoutItem /template/ Grid#LayoutRootGrid">
		<Setter Property="Margin" Value="{DynamicResource MenuFlyoutItemThemePaddingNarrow}" />
	</Style>

	<Style Selector="ui|RadioMenuFlyoutItem /template/ TextBlock#KeyboardAcceleratorTextBlock">
		<Setter Property="IsVisible" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem /template/ Viewbox#IconRoot">
		<Setter Property="IsVisible" Value="False" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem /template/ ui|PathIcon#CheckGlyph">
		<Setter Property="Opacity" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemChevron}" />
	</Style>

	<!-- PointerOver -->
	<Style Selector="ui|RadioMenuFlyoutItem:pointerover /template/ Border#LayoutRoot">
		<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPointerOver}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pointerover /template/ TextBlock#TextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pointerover /template/ ContentPresenter#IconContent">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pointerover /template/ TextBlock#KeyboardAcceleratorTextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pointerover /template/ ui|PathIcon#CheckGlyph">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
	</Style>

	<!-- Pressed -->
	<Style Selector="ui|RadioMenuFlyoutItem:pressed /template/ Border#LayoutRoot">
		<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPressed}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pressed /template/ TextBlock#TextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pressed /template/ ContentPresenter#IconContent">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pressed /template/ TextBlock#KeyboardAcceleratorTextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:pressed /template/ ui|PathIcon#CheckGlyph">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
	</Style>

	<!-- Disabled -->
	<Style Selector="ui|RadioMenuFlyoutItem:disabled /template/ Border#LayoutRoot">
		<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:disabled /template/ TextBlock#TextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:disabled /template/ ContentPresenter#IconContent">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:disabled /template/ TextBlock#KeyboardAcceleratorTextBlock">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
	</Style>
	<Style Selector="ui|RadioMenuFlyoutItem:disabled /template/ ui|PathIcon#CheckGlyph">
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
	</Style>


	<!-- Checked States -->
	<Style Selector="ui|RadioMenuFlyoutItem:checked /template/ ui|PathIcon#CheckGlyph">
		<Setter Property="Opacity" Value="1" />
	</Style>


	<!-- Placeholders (none is default) -->
	<!-- Check or Icon Placeholder -->
	<Style Selector=":is(MenuBase):icons > ui|RadioMenuFlyoutItem /template/ TextBlock#TextBlock">
		<Setter Property="Margin" Value="{DynamicResource MenuFlyoutItemPlaceholderThemeThickness}" />
	</Style>
	<Style Selector=":is(MenuBase):icons > ui|RadioMenuFlyoutItem /template/ Viewbox#IconRoot">
		<Setter Property="IsVisible" Value="True" />
	</Style>

	<!-- KeyboardAcceleratorTextVisible -->
	<Style Selector="ui|RadioMenuFlyoutItem:hotkey /template/ TextBlock#KeyboardAcceleratorTextBlock">
		<Setter Property="IsVisible" Value="True" />
	</Style>
	
</Styles>
