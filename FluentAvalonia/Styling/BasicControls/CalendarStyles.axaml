<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="using:FluentAvalonia.UI.Controls">

    <Design.PreviewWith>
        <Border Padding="20">
            <Calendar DisplayMode="Year" />
        </Border>
    </Design.PreviewWith>
    
    <!-- Calendar -->
    <Style Selector="Calendar">
        <Setter Property="Foreground" Value="{DynamicResource CalendarViewForeground}" />
        <Setter Property="Background" Value="{DynamicResource CalendarViewBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="CornerRadius"	Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel Name="Root"
                            HorizontalAlignment="Center"
                            ClipToBounds="True">

                    <CalendarItem Name="CalendarItem"
								  Background="{TemplateBinding Background}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  HeaderBackground="{TemplateBinding HeaderBackground}"
								  CornerRadius="{TemplateBinding CornerRadius}"/>

                </StackPanel>
            </ControlTemplate>
        </Setter>
    </Style>

    <!-- Calendar Day Button -->
    <Style Selector="CalendarDayButton">
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <!--These are actually set on the CalendarView in WinUI-->
        <Setter Property="Foreground" Value="{DynamicResource CalendarViewCalendarItemForeground}"/>
        <Setter Property="Background" Value="{DynamicResource CalendarViewCalendarItemBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewCalendarItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="FocusAdorner">
			<FocusAdornerTemplate>
				<Border BorderThickness="{DynamicResource SystemControlFocusVisualPrimaryThickness}"
                        BorderBrush="{DynamicResource FocusStrokeColorOuterBrush}"
                        Margin="{DynamicResource SystemControlFocusVisualMargin}"
                        CornerRadius="{DynamicResource ControlCornerRadius}">
					<Border BorderThickness="{DynamicResource SystemControlFocusVisualSecondaryThickness}"
                            BorderBrush="{DynamicResource FocusStrokeColorInnerBrush}"
                            CornerRadius="{DynamicResource ControlCornerRadius}"/>
				</Border>
			</FocusAdornerTemplate>
		</Setter>
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
					<!-- WinUI draws these items for performance, thus no template, so this is reverse engineered -->
                    <Ellipse Fill="{TemplateBinding Background}"
							 Name="Background"
							 Margin="1"/>
					
					<ContentControl Name="Content"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              FontSize="{TemplateBinding FontSize}"
                              Margin="{TemplateBinding Padding}"/>

                    <!-- Drawn Border should render on top of background to preserve the 1px
                        margin between items-->
                    <Border Name="Border"
                            BorderThickness="1"
							Margin="1"
							CornerRadius="40"/>
                    
                    <Border Name="InnerBorder"
                            BorderThickness="1"
                            Margin="2"
							CornerRadius="40"/>

                    <!--
					Keyboard is handled differently for Avalonia Calendar control so there will be a difference there
					-->
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="CalendarDayButton /template/ Border#FocusVisual">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="CalendarDayButton /template/ Border#InnerBorder">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
	<Style Selector="CalendarDayButton /template/ Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>

    <Style Selector="CalendarDayButton:pointerover /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemHoverBackground}"/>
    </Style>
	<Style Selector="CalendarDayButton:pointerover /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewHoverBorderBrush}"/>
	</Style>
	
    <Style Selector="CalendarDayButton:pressed /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemPressedBackground}"/>
    </Style>
	<Style Selector="CalendarDayButton:pressed /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewPressedBorderBrush}"/>
	</Style>
	<Style Selector="CalendarDayButton:pressed /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewPressedForeground}"/>
	</Style>

	<Style Selector="CalendarDayButton:selected /template/ Border#Border">
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewSelectedBorderBrush}"/>
		<Setter Property="IsVisible" Value="True"/>
    </Style>
    <Style Selector="CalendarDayButton:selected:pointerover /template/ Border#Border">
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewSelectedHoverBorderBrush}"/>
    </Style>
    <Style Selector="CalendarDayButton:selected:pressed /template/ Border#Border">
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewSelectedPressedBorderBrush}"/>
    </Style>
	<Style Selector="CalendarDayButton:selected:disabled /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewSelectedDisabledBorderBrush}"/>
	</Style>

	<Style Selector="CalendarDayButton:today /template/ Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>
    <Style Selector="CalendarDayButton:today /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewTodayBackground}" />
    </Style>
    <Style Selector="CalendarDayButton:today:pointerover /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewTodayHoverBackground}" />
    </Style>
    <Style Selector="CalendarDayButton:today:pressed /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewTodayPressedBackground}" />
    </Style>
	<Style Selector="CalendarDayButton:today:disabled /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewTodayDisabledBackground}" />
	</Style>
	<Style Selector="CalendarDayButton:today:selected /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewTodaySelectedInnerBorderBrush}" />
	</Style>
    <Style Selector="CalendarDayButton:today:selected /template/ Border#InnerBorder">
		<Setter Property="IsVisible" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarViewTodaySelectedInnerBorderBrush}" />
    </Style>
    <Style Selector="CalendarDayButton:today /template/ ContentControl#Content">
        <Setter Property="Foreground" Value="{DynamicResource CalendarViewTodayForeground}"/>
        <Setter Property="FontWeight" Value="{DynamicResource CalendarViewTodayFontWeight}"/>
    </Style>
    

    <!-- WinUI calls this OutOfScope-->
   <Style Selector="CalendarDayButton:inactive /template/ Border#Root">
        <Setter Property="Background" Value="{DynamicResource CalendarViewOutOfScopeBackground}"/>
    </Style>
    <Style Selector="CalendarDayButton:inactive /template/ ContentControl#Content">
        <Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopeForeground}"/>
    </Style>
	<Style Selector="CalendarDayButton:inactive:pointerover /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopeHoverForeground}"/>
	</Style>
	<Style Selector="CalendarDayButton:inactive:pressed /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopePressedForeground}"/>
	</Style>

	<Style Selector="CalendarDayButton:blackout /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewBlackoutBackground}"/>
	</Style>
    <Style Selector="CalendarDayButton:blackout /template/ ContentControl#Content">
        <Setter Property="Foreground" Value="{DynamicResource CalendarViewBlackoutForeground}"/>
    </Style>

    <Style Selector="CalendarDayButton:dayfocused:not(:focus) /template/ Border#FocusVisual">
            <Setter Property="IsVisible" Value="True"/>
      </Style>
	<!--
	Removed as this seems to conflict when Calendar is in CalendarDatePicker
	No side effects so far
	<Style Selector="CalendarDayButton:dayfocused:not(:focus) Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>-->
    <Style Selector="CalendarDayButton:disabled /template/ Ellipse#Background">
        <Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemDisabledBackground}"/>
    </Style>
    
    
    

    <!-- Calendar Button -->
	<Style Selector="CalendarButton">
		<Setter Property="ClickMode" Value="Release"/>
		<Setter Property="MinWidth" Value="40"/>
		<Setter Property="MinHeight" Value="40"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="0,0,0,0"/>
		<!--These are actually set on the CalendarView in WinUI-->
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewCalendarItemForeground}"/>
		<Setter Property="Background" Value="{DynamicResource CalendarViewCalendarItemBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewCalendarItemBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="FocusAdorner">
			<FocusAdornerTemplate>
				<Border BorderThickness="{DynamicResource SystemControlFocusVisualPrimaryThickness}"
                        BorderBrush="{DynamicResource FocusStrokeColorOuterBrush}"
                        Margin="{DynamicResource SystemControlFocusVisualMargin}"
                        CornerRadius="{DynamicResource ControlCornerRadius}">
					<Border BorderThickness="{DynamicResource SystemControlFocusVisualSecondaryThickness}"
                            BorderBrush="{DynamicResource FocusStrokeColorInnerBrush}"
                            CornerRadius="{DynamicResource ControlCornerRadius}"/>
				</Border>
			</FocusAdornerTemplate>
		</Setter>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<!-- WinUI draws these items for performance, thus no template, so this is reverse engineered -->
					<Ellipse Fill="{TemplateBinding Background}"
							 Name="Background"
							 Margin="1" Width="55.5" Height="56"/>
					<!-- Width/Height pulled from Visual tree inspector -->

					<ContentControl Name="Content"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              FontSize="{TemplateBinding FontSize}"
                              Margin="{TemplateBinding Padding}"/>

					<!-- Drawn Border should render on top of background to preserve the 1px
                        margin between items-->
					<Border Name="Border"
                            BorderThickness="1"
							Margin="1"
							CornerRadius="40"/>

					<Border Name="InnerBorder"
                            BorderThickness="1"
                            Margin="2"
							CornerRadius="40"/>

					<!--
					Keyboard is handled differently for Avalonia Calendar control so there will be a difference there
					-->
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="CalendarButton /template/ Border#FocusVisual">
		<Setter Property="IsVisible" Value="False"/>
	</Style>
	<Style Selector="CalendarButton /template/ Border#InnerBorder">
		<Setter Property="IsVisible" Value="False"/>
	</Style>
	<Style Selector="CalendarButton /template/ Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>

	<Style Selector="CalendarButton:pointerover /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemHoverBackground}"/>
	</Style>
	<Style Selector="CalendarButton:pointerover /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewHoverBorderBrush}"/>
	</Style>

	<Style Selector="CalendarButton:pressed /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemPressedBackground}"/>
	</Style>
	<Style Selector="CalendarButton:pressed /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewPressedBorderBrush}"/>
	</Style>
	<Style Selector="CalendarButton:pressed /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewPressedForeground}"/>
	</Style>

	<Style Selector="CalendarButton:selected /template/ Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>
	<Style Selector="CalendarButton:selected /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewTodayBackground}" />
	</Style>
	<Style Selector="CalendarButton:selected:pointerover /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewTodayHoverBackground}" />
	</Style>
	<Style Selector="CalendarButton:selected:pressed /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewTodayPressedBackground}" />
	</Style>
	<Style Selector="CalendarButton:selected:disabled /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewTodayDisabledBackground}" />
	</Style>
	<Style Selector="CalendarButton:selected:selected /template/ Border#Border">
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewTodaySelectedInnerBorderBrush}" />
	</Style>
	<Style Selector="CalendarButton:selected:selected /template/ Border#InnerBorder">
		<Setter Property="IsVisible" Value="True" />
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewTodaySelectedInnerBorderBrush}" />
	</Style>
	<Style Selector="CalendarButton:selected /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewTodayForeground}"/>
		<Setter Property="FontWeight" Value="{DynamicResource CalendarViewTodayFontWeight}"/>
	</Style>


	<!-- WinUI calls this OutOfScope-->
	<Style Selector="CalendarButton:inactive /template/ Border#Root">
		<Setter Property="Background" Value="{DynamicResource CalendarViewOutOfScopeBackground}"/>
	</Style>
	<Style Selector="CalendarButton:inactive /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopeForeground}"/>
	</Style>
	<Style Selector="CalendarButton:inactive:pointerover /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopeHoverForeground}"/>
	</Style>
	<Style Selector="CalendarButton:inactive:pressed /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewOutOfScopePressedForeground}"/>
	</Style>

	<Style Selector="CalendarButton:blackout /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewBlackoutBackground}"/>
	</Style>
	<Style Selector="CalendarButton:blackout /template/ ContentControl#Content">
		<Setter Property="Foreground" Value="{DynamicResource CalendarViewBlackoutForeground}"/>
	</Style>

	<Style Selector="CalendarButton:dayfocused:not(:focus) /template/ Border#FocusVisual">
		<Setter Property="IsVisible" Value="True"/>
	</Style>
	<!--
	See note above
	<Style Selector="CalendarButton:dayfocused:not(:focus) Border#Border">
		<Setter Property="IsVisible" Value="False"/>
	</Style>-->
	<Style Selector="CalendarButton:disabled /template/ Ellipse#Background">
		<Setter Property="Fill" Value="{DynamicResource CalendarViewCalendarItemDisabledBackground}"/>
	</Style>
    

    <!-- CalendarItem -->
    <Style Selector="CalendarItem">
        <Setter Property="DayTitleTemplate">
            <Template>
                <TextBlock Text="{Binding}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
						   FontWeight="{DynamicResource CalendarViewWeekDayFontWeight}"
						   Margin="{DynamicResource CalendarViewWeekDayMargin}"
						   Padding="{DynamicResource CalendarViewWeekDayPadding}"
						   Classes="CaptionTextBlockStyle"/>
            </Template>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate>
                <Border BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Border.Styles>
						<!-- Button Style for the Header -->
                        <Style Selector="Button.CalendarHeader">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="FontSize" Value="{DynamicResource CalendarViewHeaderNavigationButtonFontSize}" />
							<Setter Property="FontWeight" Value="{DynamicResource CalendarViewHeaderNavigationFontWeight}" />
							<Setter Property="Foreground" Value="{DynamicResource CalendarViewHeaderNavigationButtonForeground}" />
							<Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackground}" />
							<Setter Property="Margin" Value="{DynamicResource CalendarViewHeaderNavigationButtonMargin}" />
							<Setter Property="Padding" Value="{DynamicResource CalendarViewHeaderNavigationButtonPadding}" />
							<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <ControlTemplate>
									<ContentPresenter Name="Text"
													  TextBlock.Foreground="{TemplateBinding Foreground}"
													  Background="{TemplateBinding Background}"
													  BorderBrush="{DynamicResource }"
													  BorderThickness="{TemplateBinding BorderThickness}"
													  Content="{TemplateBinding Content}"
													  Padding="{TemplateBinding Padding}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"									
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  CornerRadius="{TemplateBinding CornerRadius}" />
                                </ControlTemplate>
                            </Setter>
                        </Style>
						<Style Selector="Button.CalendarHeader /template/ ContentPresenter#Text">
							<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewNavigationButtonBorderBrush}" />
						</Style>
                        <Style Selector="Button.CalendarHeader:pointerover /template/ ContentPresenter#Text">
                            <Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackgroundPointerOver}" />
							<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewHeaderNavigationButtonForegroundPointerOver}" />
                        </Style>
                        <Style Selector="Button.CalendarHeader:pressed /template/ ContentPresenter#Text">
							<Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackgroundPressed}" />
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewHeaderNavigationButtonForegroundPressed}" />
                            
                        </Style>
                        <Style Selector="Button.CalendarHeader:disabled /template/ ContentPresenter#Text">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewHeaderNavigationButtonForegroundDisabled}" />
                        </Style>

						<!-- Button Style for the Nav Buttons (up/down) -->
						<Style Selector="Button.CalendarNavigation">
							<Setter Property="HorizontalAlignment" Value="Stretch" />
							<Setter Property="VerticalAlignment" Value="Stretch" />
							<Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
							<Setter Property="FontSize" Value="14" /> <!-- Changed to 14 (FluentIcons is smaller) -->
							<Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackground}" />
							<Setter Property="Foreground" Value="{DynamicResource CalendarViewNavigationButtonForeground}" />
							<Setter Property="Padding" Value="{DynamicResource CalendarViewNavigationButtonPadding}" />
							<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />	
							<Setter Property="HorizontalContentAlignment" Value="Center" />							
						</Style>
						<Style Selector="Button.CalendarNavigation:pointerover /template/ ContentPresenter#Text">
							<Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackgroundPointerOver}" />
							<Setter Property="BorderBrush" Value="{DynamicResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewNavigationButtonForegroundPointerOver}" />
						</Style>
						<Style Selector="Button.CalendarNavigation:pressed /template/ ContentPresenter#Text">
							<Setter Property="Background" Value="{DynamicResource CalendarViewNavigationButtonBackgroundPressed}" />
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewNavigationButtonForegroundPressed}" />

						</Style>
						<Style Selector="Button.CalendarNavigation:disabled /template/ ContentPresenter#Text">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource CalendarViewNavigationButtonForegroundDisabled}" />
						</Style>
                    </Border.Styles>
                    <!--  To keep calendar from resizing when switching DisplayMode
						  In WinUI Min-Width from TemplateSettings
						  basically...MinWidth of DayItem = 40, 40 * 7 = 280 + margins/padding = ~294
						  Viewport height is set from # of rows displayed (2-8) in Month mode, = ~290 for 6 weeks (+ day names)
					-->
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RowDefinitions="Auto,Auto,*" MinWidth="294">
                        <Grid ColumnDefinitions="*,Auto,Auto">
                            <Button Name="HeaderButton" 
									Classes="CalendarHeader" 
									Foreground="{TemplateBinding Foreground}"
									Padding="12,0,0,0" 
									HorizontalContentAlignment="Left" />
                            <Button Name="PreviousButton" 
									Grid.Column="1" 
									Classes="CalendarNavigation CalendarHeader" 
									Foreground="{TemplateBinding Foreground}" 
									Margin="{DynamicResource CalendarViewNavigationPreviousButtonMargin}"
									HorizontalContentAlignment="Center">
                                <ui:FontIcon Glyph="&#xEDDB;" 
											 FontFamily="{DynamicResource SymbolThemeFontFamily}" />
                            </Button>
                            <Button Name="NextButton"
									Grid.Column="2" 
									Classes="CalendarNavigation CalendarHeader" 
									Foreground="{TemplateBinding Foreground}"
									Margin="{DynamicResource CalendarViewNavigationNextButtonMargin}" 
									HorizontalContentAlignment="Center">
                                <ui:FontIcon Glyph="&#xEDDC;" FontFamily="{DynamicResource SymbolThemeFontFamily}" />
                            </Button>
                        </Grid>
						<!-- Changed to Background, using only BorderBrush w/ 1px element doesn't show -->
						<Border Grid.Row="1"
								Height="1" 
								Background="{TemplateBinding BorderBrush}" />
                        <Grid Name="MonthView" Grid.Row="2" IsVisible="False" MinHeight="290" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                        <Grid Name="YearView" MinHeight="290"
                                Grid.Row="2" IsVisible="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                        </Grid>

                    </Grid>

                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>